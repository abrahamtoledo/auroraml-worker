<?phpclass ServiceProgram extends ServiceBase{	protected function Authorized(){		return $this->getUserType() >= USER_CLIENT;	}		protected function RunService(){		if (strtolower($this->data->_default) == ":delete"){			$user = $this->user;						if (DBHelper::Delete('program', "user='$user'")){				$body = "Programacion desactivada con exito, si desea\r\n" . 						"volver a activarla solo siga los pasos de programacion nuevamente";							}else{				$body = "Programacion no ha sido desactivada con exito, compruebe nuevamete\r\n" . 						"que ha enviado correctamente el correo de desactivacion";			}						$this->SendMail($body, "");		}else{			$user = $this->user;			$caths = array();			$hours = array();			foreach($this->data->params->param as $param){				if ((string)$param->name == "caths[]"){					$caths[] = (string)$param->value;				}elseif((string)$param->name == "hours[]"){					$hours[] = (string)$param->value;				}			}			$caths = implode(",", $caths);			$hours = ":" . implode(":", $hours) . ":";									$data = DBHelper::Select('program', 'id', "user='$user'");			$error = ""; $res = false;			if (count($data) > 0){ // Update Mode				$res = DBHelper::Query("UPDATE program SET caths='$caths', hours='$hours' WHERE id={$data[0]['id']}", $error);			}else{ // Insert Mode				$res = DBHelper::Query("INSERT INTO program (user, caths, hours) VALUES ('$user', '$caths', '$hours')", $error);			}						$body = "";			if ($res){				$body = "Su programacion ha sido actualizada, ahora recibira\r\nlas listas seleccionadas a las horas especificadas";							}else{				$body = "Su programacion no ha sido actualizada, compruebe que envio bien los datos";				$this->setComment("[MYSQL_ERROR]");				$this->setComment("$error");			}						$this->SendMail($body);		}	}}